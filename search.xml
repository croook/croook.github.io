<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[AI-02深度学习概述]]></title>
    <url>%2F2019%2F03%2F04%2FAI-02%E6%B7%B1%E5%BA%A6%E5%AD%A6%E4%B9%A0%E6%A6%82%E8%BF%B0%2F</url>
    <content type="text"><![CDATA[M-P神经元 为什么需要激活函数 激活函数举例 权重人工设置m-p神经元的权重由人工设置，无法学习 单层感知器首个可以学习的神经网络 逻辑实现 多层感知器异或 单层感知器，无法实现异或关系，无法找到一条线完美分开数据（0、1） 同或 单隐层神经网络可视化urlhttp://playground.tensorflow.org/ 万有逼近定理 双隐层感知器 神经网络每一层作用 更深 or 更宽]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[AI_01人工智能概述]]></title>
    <url>%2F2019%2F03%2F04%2FAI-01%2F</url>
    <content type="text"><![CDATA[人工智能&amp;机器学习什么是人工智能人工智能(Artificial Intelligence)使一部机器像人一样进行感知、认知、决策、执行的人工程序或系统 标志性事件 人工智能发展阶段 人工智能三个层面计算智能能存能算 感知智能能听会说、能看会认 认知智能能理解、会思考 人工智能 &gt; 机器学习 &gt; 深度学习 逻辑演绎 vs 归纳总结 专家系统根据专家定义的知识和经验，进行推理和判断，从而模拟人类专家的决策过程来解决问题。 知识工程 vs 机器学习 计算机视觉人脸识别图像分类目标检测图像搜索图像分割视频监控语音技术语音识别语音合成声纹识别自然语言处理文本分类机器翻译知识图谱自动问答信息检索文本生成机器学习的定义最常用定义计算机系统能够利用经验提高自身的性能 可操作定义机器学习本质是一个基于经验数据的函数估计问题 统计学定义提取重要模式、趋势，并理解数据，即从数据中学习 机器学习-怎么学模型对要学习问题映射的假设（问题建模，确定假设空间） 模型分类数据标记 监督学习模型 无监督学习模型 数据分布参数模型 、 无参数模型 建模对象 判别模型 生成模型 策略从假设空间中学习/选择最优模型的准则（确定目标函数） 算法根据目标函数求解最优模型的具体计算方法（求解模型参数） 深度学习传统机器学习：人工设计特征 传统机器学习VS 深度学习 手动设计程序 手动设计特征 神经网络结构发展 深度学习的不能 连接主义 vs 符号主义 从对立到合作 连接主义+ 符号主义]]></content>
      <categories>
        <category>AI</category>
      </categories>
      <tags>
        <tag>AI</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[next主题Google验证]]></title>
    <url>%2F2019%2F02%2F23%2Fhexo-google-verify%2F</url>
    <content type="text"><![CDATA[Google验证urlhttps://www.google.com/webmasters 修改配置文件使用html标签验证，方法同baidu验证 在站点配置文件中添加 google_site_verification: 123xxxxxx321 使用hexo d提交，刷新页面，查看源代码，如果能看到一下内容，证明标签已经成功添加： 进行验证 添加sitemap添加sitemap]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>google</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[hexo_image]]></title>
    <url>%2F2019%2F02%2F19%2Fhexo-image%2F</url>
    <content type="text"><![CDATA[hexo md文档添加图片修改站点配置文件post_asset_folder 字段置为true 修改后，当进入到/source/_posts 下使用 hexo n xxx 建立新的文章时，会自动生成一个相同命名的文件夹，用于存放文章中引用的图片等资源， 在md文档中引用时，使用相对路径 插件安装安装插件 使用命令 npm install https://github.com/CodeFalling/hexo-asset-image --save 保存预览hexo g hexo s]]></content>
      <categories>
        <category>hexo</category>
      </categories>
  </entry>
  <entry>
    <title><![CDATA[Next主题baidu验证]]></title>
    <url>%2F2019%2F02%2F17%2Fhexo_baidu_verify%2F</url>
    <content type="text"><![CDATA[baidu验证验证未收录百度搜索 site:yourgithub.github.io , 验证未收录 百度搜索平台进入百度搜索平台，点击链接提交，填写github地址 记录content值验证站点，选择html标签验证，记录content值 添加代码在themes/next下的配置文件最后添加代码 baidu_site_verification: 5xxxxxxQ 重新生成提交，无需修改head文件 刷新github页面，查看网站源代码，当可以找到正确的验证标签时，进行验证。 验证通过 等待通过，通过后进行推送 推送主动推送最为快速的提交方式，推荐您将站点当天新产出链接立即通过此方式推送给百度，以保证新链接可以及时被百度收录。 自动推送最为便捷的提交方式，请将自动推送的JS代码部署在站点的每一个页面源代码中，部署代码的页面在每次被浏览时，链接会被自动推送给百度。可以与主动推送配合使用。 sitemap您可以定期将网站链接放到sitemap中，然后将sitemap提交给百度。百度会周期性的抓取检查您提交的sitemap，对其中的链接进行处理，但收录速度慢于主动推送。 手动提交一次性提交链接给百度，可以使用此种方式。 主动推送&gt;自动推送&gt;sitemap主动推送安装hexo-baidu-url-submit插件git bash 命令 npm install hexo-baidu-url-submit --save 添加baidu-url-submit的配置项站点配置文件中添加： #设置百度主动推送baidu_url_submit: count: 200 #比如200，代表提交最新的200个链接 host: www.lansheng.net.cn # 在百度站长平台中注册的域名，这个改为你自己的域名 token: your_token # 请注意这是您的秘钥， 所以请不要把博客源代码发布在公众仓库里! path: baidu_urls.txt # 文本文档的地址， 新链接会保存在此文本文档里，这个默认 同时注意修改站点配置文件中的url值 加入新的deploy配置项两个type前都要加‘ - ’，表明层次 deploy: - type: gitrepo: coding: git@git.coding.net:你的coding用户名/你的coding用户名.coding.me.git #coding地址 github: git@github.com:你的github用户名/你的github用户名.github.io.git # Github地址branch: master - type: baidu_url_submitter 验证配置是否成功hexo d部署后查看反馈： 自动推送设置baidu_push将主题配置文件中的baidu_push置为 true 自动推送代码位于 themes\next\layout\_third-party\baidu-push.swig Sitemap安装baidu 、Google插件git bash命令 npm install hexo-generator-sitemap --save npm install hexo-generator-baidu-sitemap --save 修改配置文件修改站点配置文件，添加 # 自动生成sitemapsitemap:path: sitemap.xmlbaidusitemap:path: baidusitemap.xml 编译hexo clean &amp;&amp; hexo g 更换站点地图文件url将地图文件中的yoursite.com更换成自己的url 在站长管理中提交地图]]></content>
      <categories>
        <category>hexo</category>
      </categories>
      <tags>
        <tag>baidu</tag>
      </tags>
  </entry>
  <entry>
    <title><![CDATA[Hello World]]></title>
    <url>%2F2019%2F02%2F17%2Fhello-world%2F</url>
    <content type="text"><![CDATA[Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new "My New Post" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment]]></content>
      <categories>
        <category>hexo</category>
      </categories>
  </entry>
</search>
